l
l[-8]
View(bb)
View(bb.1)
l <- 'x1st.week'
l[-8]
l[1]
l[c(1,-8)]
bb.5 <- bb.4 %>% separate(week, into=c("A", "B", "C"), sep='th', convert=TRUE)
bb.5 <- bb.4 %>% separate(week, into=c("A", "B"), sep='th', convert=TRUE)
View(bb.5)
bb.5 <- bb.4 %>% separate(week, into=c("A", "B"), sep=c('x', '[0-9]'), convert=TRUE)
bb.5 <- bb.4 %>% separate(week, into=c("A", "B"), sep=c('x', 'st','nd','th'), convert=TRUE)
View(bb.5)
bb.5 <- bb.4 %>% separate(week, into=c("A", "B"), sep=c(1,-8), convert=TRUE)
View(bb.5)
bb.5 <- bb.4 %>% separate(week, into=c("A", "B"), sep=c(1,-5), convert=TRUE)
View(bb.5)
bb.5 <- bb.4 %>% separate(week, into=c("A", "B"), sep=c(1,-6), convert=TRUE)
View(bb.5)
bb.5 <- bb.4 %>% separate(week, into=c("A", "B"), sep=c(1,-7), convert=TRUE)
View(bb.5)
bb <- read_csv("billboard.csv")
bb.1 <- bb %>% gather(key="week", value = "rank", -year, -artist.inverted, -track, -time, -genre, -date.entered, -date.peaked)
bb.2 <- bb.1 %>% select(year, artist=artist.inverted, time, track, date = date.entered, week, rank )
bb.3 <- bb.2 %>% arrange(track)
bb.4 <- bb.3 %>% filter(!is.na(rank))
bb.5 <- bb.4 %>% separate(week, into=c("A", "B", "C"), sep=c(1, -7), convert=TRUE)
bb.6 <- bb.5 %>% select(-A, -C)
bb.7 <- bb.6 %>%   dplyr::rename(week = B)
bb.8 <- bb.7 %>% arrange(artist, track)
bb.9 <- bb.8 %>% mutate(date = date + (week-1)*7 )
bb.10 <- bb.9 %>% mutate(rank = as.integer(rank))
View(bb.10)
install.packages("ggmap")
library(ggmap)
map1 <- get_googlemap(location= "Boston, MA", source="google")
ggmap(map1, exten='normal')
map1 <- get_googlemap(location= "02134", source="google")
ggmap(map1, exten='normal')
map2 <- get_map( location=c(-71.2, 42.4))
ggmap(map2)
map1 <- get_googlemap(location= c("02134"), source="google")
ggmap(map1, exten='normal')
library(shiny); runApp('Dropbox/college/ma415/Assignment5/part1/app2.R')
runApp('Dropbox/college/ma415/Assignment5/part1/app2.R')
runApp('Dropbox/college/ma415/Assignment5/part1/app2.R')
shiny::runApp('Dropbox/college/ma415/Assignment5/part1')
install.packages("tidycensus")
source('~/Dropbox/college/ma415/hw6/hw6.R')
source('~/Downloads/maps -hw.R')
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "red", size = 2
)
gc <- geocode("Bude, England")
cricket <- geocode("S W Coast Path, Bude EX23 8HN, UK")
pub <- geocode("Crooklets Inn, Crooklets, Bude EX23 8NF, UK")
summersleaze_beach <- geocode("Summerleaze Cres, Bude EX23 8HN, UK")
crooklets_beach <- geocode("S W Coast Path, Bude EX23 8NE, UK")
map <- get_map(gc, zoom=14)
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 3
)
from <- "Boston University"
to <- "Burlington, Vermont"
route_df <- route(from, to, structure = "route")
map10 <- get_map("Boston, MA", zoom = 8)
ggmap(map10) +
geom_path(
aes(x = lon, y = lat), colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
from <- "S W Coast Path, Bude EX23 8HN, UK"
to <- "Crooklets Inn, Crooklets, Bude EX23 8NF, UK"
route_df <- route(from, to, structure = "route")
map <- get_map(gc, zoom=14)
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 3
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1.5,
data = route_df, lineend = "round"
)
map <- get_map(gc, zoom=15)
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 3
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1.5,
data = route_df, lineend = "round"
)
map <- get_map(gc, zoom=14)
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 3
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1.5,
data = route_df, lineend = "round"
)
map2 <- get_map(gc, zoom=14, maptype = "watercolor")
ggmap(map2) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 3
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1.5,
data = route_df, lineend = "round"
)
route_df <- route(from, to, structure = "route", mode='walking')
map <- get_map(gc, zoom=14)
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 3
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1.5,
data = route_df, lineend = "round"
)
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 2
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 2
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 2
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 2
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1.5,
data = route_df, lineend = "round"
)
ggmap(map) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 2
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 2
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 2
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 2
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1,
data = route_df, lineend = "round"
)
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
library(tidyverse)
gc <- geocode("Bude, England")
cricket <- geocode("S W Coast Path, Bude EX23 8HN, UK")
pub <- geocode("Crooklets Inn, Crooklets, Bude EX23 8NF, UK")
summersleaze_beach <- geocode("Summerleaze Cres, Bude EX23 8HN, UK")
crooklets_beach <- geocode("S W Coast Path, Bude EX23 8NE, UK")
from <- "S W Coast Path, Bude EX23 8HN, UK"
to <- "Crooklets Inn, Crooklets, Bude EX23 8NF, UK"
route_df <- route(from, to, structure = "route", mode='walking')
map <- get_map(gc, zoom=14)
map2 <- get_map(gc, zoom=14, maptype = "watercolor")
ggmap(map2) +
geom_point(
aes(x = lon, y = lat),
data = cricket, color = "yellow", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = pub, color = "green", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = summersleaze_beach, color = "red", size = 3
) +
geom_point(
aes(x = lon, y = lat),
data = crooklets_beach, color = "blue", size = 3
) +
geom_path(
aes(x = lon, y = lat), colour = "orange", size = 1.5,
data = route_df, lineend = "round"
)
library(ggmap)
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
library(tidyverse)
gc <- geocode("Bude, England")
cricket <- geocode("S W Coast Path, Bude EX23 8HN, UK")
pub <- geocode("Crooklets Inn, Crooklets, Bude EX23 8NF, UK")
summersleaze_beach <- geocode("Summerleaze Cres, Bude EX23 8HN, UK")
crooklets_beach <- geocode("S W Coast Path, Bude EX23 8NE, UK")
from <- "S W Coast Path, Bude EX23 8HN, UK"
to <- "Crooklets Inn, Crooklets, Bude EX23 8NF, UK"
route_df <- route(from, to, structure = "route", mode='walking')
map <- get_map(gc, zoom=14)
map2 <- get_map(gc, zoom=14, maptype = "watercolor")
install.packages("leaflet")
shiny::runApp('Dropbox/college/ma415/Assignment5/part1')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
install.packages("maps")
install.packages("maps")
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
install.packages("mapdata")
all_states <- map_data("state")
library(mapdata)
all_states <- map_data("state")
install.packages("fiftystater")
library(fiftystater)
fifty_states
USArrests
USAccDeaths
USArrests
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
library(ggplot2)
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
p
Assault
crimes
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Rape), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
p
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
library(dplyr)
us <- map_data("state")
us <- map_data("state")
mapdata
map_data()
us <- map_data("state")
map_data('state')
map_data('')
map_data
map_data.help?
h
help?
lsdf
?help
?map_data
map_data('usa')
library(maps)
map_data('usa')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
crimes
US
US_states
states
current_senate <- data.frame(state = tolower(rownames(USArrests)))
current_senate
map(database = "state")
shiny::runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
source('~/Dropbox/college/ma415/final/PredictItAnalysis/gcb.R')
runApp('Dropbox/college/ma415/final/PredictItAnalysis')
gcb <- read.csv("gcb.csv")
gcb
ggplot(gcb[1:90,], aes(Date)) +
geom_line(aes(y=Democrat_Value), colour="blue") +
geom_line(aes(y=Republican_Value), colour="red") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title="General Congressional Ballot: Last 90 Days", x = "Date", y = "Percent")
gcb_clean
source('~/Dropbox/college/ma415/final/PredictItAnalysis/gcb.R')
gcb <- read.csv(file="gcb.csv")
setwd("~/Dropbox/college/ma415/final/PredictItAnalysis/")
source('~/Dropbox/college/ma415/final/PredictItAnalysis/gcb.R')
gcb <- read.csv(file="gcb.csv")
gcb
gcb_clean
write.csv(gcb_clean, file="gcb.csv")
getwd()
runApp()
gcb[1:90,]
geom_line(aes(y=Democrat_Value), colour="blue") +
geom_line(aes(y=Republican_Value), colour="red") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title="General Congressional Ballot: Last 90 Days", x = "Date", y = "Percent")
geom_line(aes(y=Democrat_Value), colour="blue") +
geom_line(aes(y=Republican_Value), colour="red") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title="General Congressional Ballot: Last 90 Days", x = "Date", y = "Percent")
ggplot(gcb[1:90,], aes(Date)) +
geom_line(aes(y=Democrat_Value), colour="blue") +
geom_line(aes(y=Republican_Value), colour="red") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title="General Congressional Ballot: Last 90 Days", x = "Date", y = "Percent")
ggplot(gcb[1:90,], aes(Date)) +
geom_line(aes(y=Democrat_Value), colour="blue")
ggplot(gcb[1:90,], aes(Date, Democrat_Value)) +
geom_line(aes(y=Democrat_Value), colour="blue")
ggplot(gcb[1:90,], aes(x=Date, y=Democrat_Value))
ggplot(gcb, aes(x=Date, y=Democrat_Value))
ggplot(data=gcb, aes(x=Datee, y=Democrat_Value, group=1)) +
geom_line()+
geom_point()
ggplot(data=gcb, aes(x=Date, y=Democrat_Value, group=1)) +
geom_line()+
geom_point()
ggplot(data=gcb[1:90,], aes(x=Date, y=Democrat_Value, group=1)) +
geom_line()+
geom_point()
ggplot(data=gcb[1:90,], aes(x=Date, y=Democrat_Value, group=1)) +
geom_line()
ggplot(data=gcb[1:90,], aes(x=Date, group=1)) +
geom_line(aes(y=Republican_Value), colour="red")
runApp()
runApp()
?scale_x_date
scale_x_date(date_breaks= "month")
runApp()
runApp()
library(sclaes)
library(scales)
runApp()
runApp()
runApp()
runApp()
gcb
rev(gcb)
gcb[order(gcb$Date),]
source('~/Dropbox/college/ma415/final/PredictItAnalysis/gcb.R')
gcb[order(gcb$Date),]
gcb
source('~/Dropbox/college/ma415/final/PredictItAnalysis/gcb.R')
gcb <- read.csv("gcb.csv")
gcb
gcb[seq(dim(gcb)[1],1),]
gcb
gcb[seq(dim(gcb)[1],1),]
runApp()
runApp()
gcb$Date
as.Date(gcb$Date)
gcb$Date
as.Date(gcb$Date)
source('~/Dropbox/college/ma415/final/PredictItAnalysis/gcb.R')
gcb <- read.csv("gcb.csv")
gcb
runApp()
runApp()
runApp()
runApp()
gcb
gcb$Spread
gcb
gcb$Spread[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
